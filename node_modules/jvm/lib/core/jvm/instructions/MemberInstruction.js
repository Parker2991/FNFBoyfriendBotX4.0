'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };

var _ImmediateShortInstruction = require('./ImmediateShortInstruction');

var _ImmediateShortInstruction2 = _interopRequireDefault(_ImmediateShortInstruction);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /** @ignore */


var MemberInstruction = function (_ImmediateShortInstru) {
  _inherits(MemberInstruction, _ImmediateShortInstru);

  function MemberInstruction(methodInfo, idx, opcode) {
    _classCallCheck(this, MemberInstruction);

    return _possibleConstructorReturn(this, (MemberInstruction.__proto__ || Object.getPrototypeOf(MemberInstruction)).call(this, methodInfo, idx, opcode));
  }

  _createClass(MemberInstruction, [{
    key: 'toString',
    value: function toString() {
      return _get(MemberInstruction.prototype.__proto__ || Object.getPrototypeOf(MemberInstruction.prototype), 'toString', this).call(this, { name: this.name, desc: this.desc, owner: this.owner });
    }
  }, {
    key: 'desc',
    get: function get() {
      return this.pool.at(this.typeInfo.descriptor_index).info.bytes;
    }
  }, {
    key: 'name',
    get: function get() {
      return this.pool.at(this.typeInfo.name_index).info.bytes;
    }
  }, {
    key: 'owner',
    get: function get() {
      var info = this.valInfo;
      return this.pool.at(this.pool.at(info.class_index).info.name_index).info.bytes;
    }
  }, {
    key: 'typeInfo',
    get: function get() {
      return this.pool.at(this.valInfo.name_and_type_index).info;
    }
  }, {
    key: 'valInfo',
    get: function get() {
      return this.pool.at(this.val).info;
    }
  }]);

  return MemberInstruction;
}(_ImmediateShortInstruction2.default);

exports.default = MemberInstruction;


module.exports = MemberInstruction;