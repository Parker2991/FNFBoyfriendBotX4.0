'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AttributeMapping = exports.JVMMethodParametersAttribute = exports.JVMBootstrapMethodsAttribute = exports.JVMAnnotationDefaultAttribute = exports.JVMRuntimeInvisibleTypeAnnotationsAttribute = exports.JVMRuntimeVisibleTypeAnnotationsAttribute = exports.JVMRuntimeInvisibleParameterAnnotationsAttribute = exports.JVMRuntimeVisibleParameterAnnotationsAttribute = exports.JVMRuntimeInvisibleAnnotationsAttribute = exports.JVMRuntimeVisibleAnnotationsAttribute = exports.JVMDeprecatedAttribute = exports.JVMLocalVariableTypeTableAttribute = exports.JVMLocalVariableTableAttribute = exports.JVMSourceDebugExtensionAttribute = exports.JVMLineNumberTableAttribute = exports.JVMSourceFileAttribute = exports.JVMSignatureAttribute = exports.JVMSyntheticAttribute = exports.JVMEnclosingMethodAttribute = exports.JVMInnerClassesAttribute = exports.JVMExceptionsAttribute = exports.JVMStackMapTableAttribute = exports.JVMCodeAttribute = exports.JVMConstantValueAttribute = exports.JVMAttribute = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

exports.decodeAttribute = decodeAttribute;

var _NiceBuffer = require('../parsers/NiceBuffer');

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

var Errors = require('../../Errors');

var JVMAttribute = exports.JVMAttribute = function () {
  function JVMAttribute(attrInfo) {
    _classCallCheck(this, JVMAttribute);

    this.attrInfo = attrInfo;
  }

  _createClass(JVMAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMAttribute;
}();

/**
 * @link https://docs.oracle.com/javase/specs/jvms/se8/html/jvms-4.html#jvms-4.7.2
 */


var JVMConstantValueAttribute = exports.JVMConstantValueAttribute = function (_JVMAttribute) {
  _inherits(JVMConstantValueAttribute, _JVMAttribute);

  function JVMConstantValueAttribute(attrInfo) {
    _classCallCheck(this, JVMConstantValueAttribute);

    return _possibleConstructorReturn(this, (JVMConstantValueAttribute.__proto__ || Object.getPrototypeOf(JVMConstantValueAttribute)).call(this, attrInfo));
  }

  _createClass(JVMConstantValueAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo.info);

      var constantValueIndex = buff.short();
      return constantValueIndex;
    }
  }]);

  return JVMConstantValueAttribute;
}(JVMAttribute);

var JVMCodeAttribute = exports.JVMCodeAttribute = function (_JVMAttribute2) {
  _inherits(JVMCodeAttribute, _JVMAttribute2);

  function JVMCodeAttribute(attrInfo) {
    _classCallCheck(this, JVMCodeAttribute);

    return _possibleConstructorReturn(this, (JVMCodeAttribute.__proto__ || Object.getPrototypeOf(JVMCodeAttribute)).call(this, attrInfo));
  }

  _createClass(JVMCodeAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo.info);

      return buff.readStruct([['max_stack', _NiceBuffer.SIZE_SHORT], ['max_locals', _NiceBuffer.SIZE_SHORT], ['code_length', _NiceBuffer.SIZE_INT], ['$code', 'code_length'], ['exception_table_length', _NiceBuffer.SIZE_SHORT], ['@exception_table|exception_table_length', {
        struct: [['start_pc', _NiceBuffer.SIZE_SHORT], ['end_pc', _NiceBuffer.SIZE_SHORT], ['handler_pc', _NiceBuffer.SIZE_SHORT], ['catch_type', _NiceBuffer.SIZE_SHORT]]
      }]]);
    }
  }]);

  return JVMCodeAttribute;
}(JVMAttribute);

var JVMStackMapTableAttribute = exports.JVMStackMapTableAttribute = function (_JVMAttribute3) {
  _inherits(JVMStackMapTableAttribute, _JVMAttribute3);

  function JVMStackMapTableAttribute(attrInfo) {
    _classCallCheck(this, JVMStackMapTableAttribute);

    return _possibleConstructorReturn(this, (JVMStackMapTableAttribute.__proto__ || Object.getPrototypeOf(JVMStackMapTableAttribute)).call(this, attrInfo));
  }

  _createClass(JVMStackMapTableAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMStackMapTableAttribute;
}(JVMAttribute);

var JVMExceptionsAttribute = exports.JVMExceptionsAttribute = function (_JVMAttribute4) {
  _inherits(JVMExceptionsAttribute, _JVMAttribute4);

  function JVMExceptionsAttribute(attrInfo) {
    _classCallCheck(this, JVMExceptionsAttribute);

    return _possibleConstructorReturn(this, (JVMExceptionsAttribute.__proto__ || Object.getPrototypeOf(JVMExceptionsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMExceptionsAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['number_of_exceptions', _NiceBuffer.SIZE_SHORT], ['$exception_index_table|number_of_exceptions', {
        struct: [['class_index', _NiceBuffer.SIZE_SHORT]]
      }]]);
    }
  }]);

  return JVMExceptionsAttribute;
}(JVMAttribute);

var JVMInnerClassesAttribute = exports.JVMInnerClassesAttribute = function (_JVMAttribute5) {
  _inherits(JVMInnerClassesAttribute, _JVMAttribute5);

  function JVMInnerClassesAttribute(attrInfo) {
    _classCallCheck(this, JVMInnerClassesAttribute);

    return _possibleConstructorReturn(this, (JVMInnerClassesAttribute.__proto__ || Object.getPrototypeOf(JVMInnerClassesAttribute)).call(this, attrInfo));
  }

  _createClass(JVMInnerClassesAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['number_of_classes', _NiceBuffer.SIZE_SHORT], ['$classes|number_of_classes', {
        struct: [['inner_class_info_index', _NiceBuffer.SIZE_SHORT], ['outer_class_info_index', _NiceBuffer.SIZE_SHORT], ['inner_name_index', _NiceBuffer.SIZE_SHORT], ['inner_class_access_flags', _NiceBuffer.SIZE_SHORT]]
      }]]);
    }
  }]);

  return JVMInnerClassesAttribute;
}(JVMAttribute);

var JVMEnclosingMethodAttribute = exports.JVMEnclosingMethodAttribute = function (_JVMAttribute6) {
  _inherits(JVMEnclosingMethodAttribute, _JVMAttribute6);

  function JVMEnclosingMethodAttribute(attrInfo) {
    _classCallCheck(this, JVMEnclosingMethodAttribute);

    return _possibleConstructorReturn(this, (JVMEnclosingMethodAttribute.__proto__ || Object.getPrototypeOf(JVMEnclosingMethodAttribute)).call(this, attrInfo));
  }

  _createClass(JVMEnclosingMethodAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['class_index', _NiceBuffer.SIZE_SHORT], ['method_index', _NiceBuffer.SIZE_SHORT]]);
    }
  }]);

  return JVMEnclosingMethodAttribute;
}(JVMAttribute);

var JVMSyntheticAttribute = exports.JVMSyntheticAttribute = function (_JVMAttribute7) {
  _inherits(JVMSyntheticAttribute, _JVMAttribute7);

  function JVMSyntheticAttribute(attrInfo) {
    _classCallCheck(this, JVMSyntheticAttribute);

    return _possibleConstructorReturn(this, (JVMSyntheticAttribute.__proto__ || Object.getPrototypeOf(JVMSyntheticAttribute)).call(this, attrInfo));
  }

  _createClass(JVMSyntheticAttribute, [{
    key: 'decode',
    value: function decode() {
      // TODO: assert attribute_length === 0
      return {};
    }
  }]);

  return JVMSyntheticAttribute;
}(JVMAttribute);

var JVMSignatureAttribute = exports.JVMSignatureAttribute = function (_JVMAttribute8) {
  _inherits(JVMSignatureAttribute, _JVMAttribute8);

  function JVMSignatureAttribute(attrInfo) {
    _classCallCheck(this, JVMSignatureAttribute);

    return _possibleConstructorReturn(this, (JVMSignatureAttribute.__proto__ || Object.getPrototypeOf(JVMSignatureAttribute)).call(this, attrInfo));
  }

  _createClass(JVMSignatureAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['signature_index', _NiceBuffer.SIZE_SHORT]]);
    }
  }]);

  return JVMSignatureAttribute;
}(JVMAttribute);

var JVMSourceFileAttribute = exports.JVMSourceFileAttribute = function (_JVMAttribute9) {
  _inherits(JVMSourceFileAttribute, _JVMAttribute9);

  function JVMSourceFileAttribute(attrInfo) {
    _classCallCheck(this, JVMSourceFileAttribute);

    return _possibleConstructorReturn(this, (JVMSourceFileAttribute.__proto__ || Object.getPrototypeOf(JVMSourceFileAttribute)).call(this, attrInfo));
  }

  _createClass(JVMSourceFileAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['sourcefile_index', _NiceBuffer.SIZE_SHORT]]);
    }
  }]);

  return JVMSourceFileAttribute;
}(JVMAttribute);

var JVMLineNumberTableAttribute = exports.JVMLineNumberTableAttribute = function (_JVMAttribute10) {
  _inherits(JVMLineNumberTableAttribute, _JVMAttribute10);

  function JVMLineNumberTableAttribute(attrInfo) {
    _classCallCheck(this, JVMLineNumberTableAttribute);

    return _possibleConstructorReturn(this, (JVMLineNumberTableAttribute.__proto__ || Object.getPrototypeOf(JVMLineNumberTableAttribute)).call(this, attrInfo));
  }

  _createClass(JVMLineNumberTableAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['debug_extension', attr.attribute_length]]);
    }
  }]);

  return JVMLineNumberTableAttribute;
}(JVMAttribute);

var JVMSourceDebugExtensionAttribute = exports.JVMSourceDebugExtensionAttribute = function (_JVMAttribute11) {
  _inherits(JVMSourceDebugExtensionAttribute, _JVMAttribute11);

  function JVMSourceDebugExtensionAttribute(attrInfo) {
    _classCallCheck(this, JVMSourceDebugExtensionAttribute);

    return _possibleConstructorReturn(this, (JVMSourceDebugExtensionAttribute.__proto__ || Object.getPrototypeOf(JVMSourceDebugExtensionAttribute)).call(this, attrInfo));
  }

  _createClass(JVMSourceDebugExtensionAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['line_number_table_length', _NiceBuffer.SIZE_SHORT], ['@line_number_table|line_number_table_length]', {
        struct: [['start_pc', _NiceBuffer.SIZE_SHORT], ['line_number', _NiceBuffer.SIZE_SHORT]]
      }]]);
    }
  }]);

  return JVMSourceDebugExtensionAttribute;
}(JVMAttribute);

var JVMLocalVariableTableAttribute = exports.JVMLocalVariableTableAttribute = function (_JVMAttribute12) {
  _inherits(JVMLocalVariableTableAttribute, _JVMAttribute12);

  function JVMLocalVariableTableAttribute(attrInfo) {
    _classCallCheck(this, JVMLocalVariableTableAttribute);

    return _possibleConstructorReturn(this, (JVMLocalVariableTableAttribute.__proto__ || Object.getPrototypeOf(JVMLocalVariableTableAttribute)).call(this, attrInfo));
  }

  _createClass(JVMLocalVariableTableAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['local_variable_table_length', _NiceBuffer.SIZE_SHORT], ['@local_variable_table|local_variable_table_length]', {
        struct: [['start_pc', _NiceBuffer.SIZE_SHORT], ['length', _NiceBuffer.SIZE_SHORT], ['name_index', _NiceBuffer.SIZE_SHORT], ['descriptor_index', _NiceBuffer.SIZE_SHORT], ['index', _NiceBuffer.SIZE_SHORT]]
      }]]);
    }
  }]);

  return JVMLocalVariableTableAttribute;
}(JVMAttribute);

var JVMLocalVariableTypeTableAttribute = exports.JVMLocalVariableTypeTableAttribute = function (_JVMAttribute13) {
  _inherits(JVMLocalVariableTypeTableAttribute, _JVMAttribute13);

  function JVMLocalVariableTypeTableAttribute(attrInfo) {
    _classCallCheck(this, JVMLocalVariableTypeTableAttribute);

    return _possibleConstructorReturn(this, (JVMLocalVariableTypeTableAttribute.__proto__ || Object.getPrototypeOf(JVMLocalVariableTypeTableAttribute)).call(this, attrInfo));
  }

  _createClass(JVMLocalVariableTypeTableAttribute, [{
    key: 'decode',
    value: function decode() {
      var buff = new _NiceBuffer.NiceBuffer(this.attrInfo);

      return buff.readStruct([['local_variable_type_table_length', _NiceBuffer.SIZE_SHORT], ['@local_variable_type_table|local_variable_type_table_length]', {
        struct: [['start_pc', _NiceBuffer.SIZE_SHORT], ['length', _NiceBuffer.SIZE_SHORT], ['name_index', _NiceBuffer.SIZE_SHORT], ['signature_index', _NiceBuffer.SIZE_SHORT], ['index', _NiceBuffer.SIZE_SHORT]]
      }]]);
    }
  }]);

  return JVMLocalVariableTypeTableAttribute;
}(JVMAttribute);

var JVMDeprecatedAttribute = exports.JVMDeprecatedAttribute = function (_JVMAttribute14) {
  _inherits(JVMDeprecatedAttribute, _JVMAttribute14);

  function JVMDeprecatedAttribute(attrInfo) {
    _classCallCheck(this, JVMDeprecatedAttribute);

    return _possibleConstructorReturn(this, (JVMDeprecatedAttribute.__proto__ || Object.getPrototypeOf(JVMDeprecatedAttribute)).call(this, attrInfo));
  }

  _createClass(JVMDeprecatedAttribute, [{
    key: 'decode',
    value: function decode() {
      // TODO: assert attribute_length === 0
      return {};
    }
  }]);

  return JVMDeprecatedAttribute;
}(JVMAttribute);

var JVMRuntimeVisibleAnnotationsAttribute = exports.JVMRuntimeVisibleAnnotationsAttribute = function (_JVMAttribute15) {
  _inherits(JVMRuntimeVisibleAnnotationsAttribute, _JVMAttribute15);

  function JVMRuntimeVisibleAnnotationsAttribute(attrInfo) {
    _classCallCheck(this, JVMRuntimeVisibleAnnotationsAttribute);

    return _possibleConstructorReturn(this, (JVMRuntimeVisibleAnnotationsAttribute.__proto__ || Object.getPrototypeOf(JVMRuntimeVisibleAnnotationsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMRuntimeVisibleAnnotationsAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMRuntimeVisibleAnnotationsAttribute;
}(JVMAttribute);

var JVMRuntimeInvisibleAnnotationsAttribute = exports.JVMRuntimeInvisibleAnnotationsAttribute = function (_JVMAttribute16) {
  _inherits(JVMRuntimeInvisibleAnnotationsAttribute, _JVMAttribute16);

  function JVMRuntimeInvisibleAnnotationsAttribute(attrInfo) {
    _classCallCheck(this, JVMRuntimeInvisibleAnnotationsAttribute);

    return _possibleConstructorReturn(this, (JVMRuntimeInvisibleAnnotationsAttribute.__proto__ || Object.getPrototypeOf(JVMRuntimeInvisibleAnnotationsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMRuntimeInvisibleAnnotationsAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMRuntimeInvisibleAnnotationsAttribute;
}(JVMAttribute);

var JVMRuntimeVisibleParameterAnnotationsAttribute = exports.JVMRuntimeVisibleParameterAnnotationsAttribute = function (_JVMAttribute17) {
  _inherits(JVMRuntimeVisibleParameterAnnotationsAttribute, _JVMAttribute17);

  function JVMRuntimeVisibleParameterAnnotationsAttribute(attrInfo) {
    _classCallCheck(this, JVMRuntimeVisibleParameterAnnotationsAttribute);

    return _possibleConstructorReturn(this, (JVMRuntimeVisibleParameterAnnotationsAttribute.__proto__ || Object.getPrototypeOf(JVMRuntimeVisibleParameterAnnotationsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMRuntimeVisibleParameterAnnotationsAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMRuntimeVisibleParameterAnnotationsAttribute;
}(JVMAttribute);

var JVMRuntimeInvisibleParameterAnnotationsAttribute = exports.JVMRuntimeInvisibleParameterAnnotationsAttribute = function (_JVMAttribute18) {
  _inherits(JVMRuntimeInvisibleParameterAnnotationsAttribute, _JVMAttribute18);

  function JVMRuntimeInvisibleParameterAnnotationsAttribute(attrInfo) {
    _classCallCheck(this, JVMRuntimeInvisibleParameterAnnotationsAttribute);

    return _possibleConstructorReturn(this, (JVMRuntimeInvisibleParameterAnnotationsAttribute.__proto__ || Object.getPrototypeOf(JVMRuntimeInvisibleParameterAnnotationsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMRuntimeInvisibleParameterAnnotationsAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMRuntimeInvisibleParameterAnnotationsAttribute;
}(JVMAttribute);

var JVMRuntimeVisibleTypeAnnotationsAttribute = exports.JVMRuntimeVisibleTypeAnnotationsAttribute = function (_JVMAttribute19) {
  _inherits(JVMRuntimeVisibleTypeAnnotationsAttribute, _JVMAttribute19);

  function JVMRuntimeVisibleTypeAnnotationsAttribute(attrInfo) {
    _classCallCheck(this, JVMRuntimeVisibleTypeAnnotationsAttribute);

    return _possibleConstructorReturn(this, (JVMRuntimeVisibleTypeAnnotationsAttribute.__proto__ || Object.getPrototypeOf(JVMRuntimeVisibleTypeAnnotationsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMRuntimeVisibleTypeAnnotationsAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMRuntimeVisibleTypeAnnotationsAttribute;
}(JVMAttribute);

var JVMRuntimeInvisibleTypeAnnotationsAttribute = exports.JVMRuntimeInvisibleTypeAnnotationsAttribute = function (_JVMAttribute20) {
  _inherits(JVMRuntimeInvisibleTypeAnnotationsAttribute, _JVMAttribute20);

  function JVMRuntimeInvisibleTypeAnnotationsAttribute(attrInfo) {
    _classCallCheck(this, JVMRuntimeInvisibleTypeAnnotationsAttribute);

    return _possibleConstructorReturn(this, (JVMRuntimeInvisibleTypeAnnotationsAttribute.__proto__ || Object.getPrototypeOf(JVMRuntimeInvisibleTypeAnnotationsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMRuntimeInvisibleTypeAnnotationsAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMRuntimeInvisibleTypeAnnotationsAttribute;
}(JVMAttribute);

var JVMAnnotationDefaultAttribute = exports.JVMAnnotationDefaultAttribute = function (_JVMAttribute21) {
  _inherits(JVMAnnotationDefaultAttribute, _JVMAttribute21);

  function JVMAnnotationDefaultAttribute(attrInfo) {
    _classCallCheck(this, JVMAnnotationDefaultAttribute);

    return _possibleConstructorReturn(this, (JVMAnnotationDefaultAttribute.__proto__ || Object.getPrototypeOf(JVMAnnotationDefaultAttribute)).call(this, attrInfo));
  }

  _createClass(JVMAnnotationDefaultAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMAnnotationDefaultAttribute;
}(JVMAttribute);

var JVMBootstrapMethodsAttribute = exports.JVMBootstrapMethodsAttribute = function (_JVMAttribute22) {
  _inherits(JVMBootstrapMethodsAttribute, _JVMAttribute22);

  function JVMBootstrapMethodsAttribute(attrInfo) {
    _classCallCheck(this, JVMBootstrapMethodsAttribute);

    return _possibleConstructorReturn(this, (JVMBootstrapMethodsAttribute.__proto__ || Object.getPrototypeOf(JVMBootstrapMethodsAttribute)).call(this, attrInfo));
  }

  _createClass(JVMBootstrapMethodsAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMBootstrapMethodsAttribute;
}(JVMAttribute);

var JVMMethodParametersAttribute = exports.JVMMethodParametersAttribute = function (_JVMAttribute23) {
  _inherits(JVMMethodParametersAttribute, _JVMAttribute23);

  function JVMMethodParametersAttribute(attrInfo) {
    _classCallCheck(this, JVMMethodParametersAttribute);

    return _possibleConstructorReturn(this, (JVMMethodParametersAttribute.__proto__ || Object.getPrototypeOf(JVMMethodParametersAttribute)).call(this, attrInfo));
  }

  _createClass(JVMMethodParametersAttribute, [{
    key: 'decode',
    value: function decode() {
      throw Errors.NotImplementedError;
    }
  }]);

  return JVMMethodParametersAttribute;
}(JVMAttribute);

var AttributeMapping = exports.AttributeMapping = {
  Code: JVMCodeAttribute,
  ConstantValue: JVMConstantValueAttribute,
  StackMapTable: JVMStackMapTableAttribute,
  Exceptions: JVMExceptionsAttribute,
  InnerClasses: JVMInnerClassesAttribute,
  EnclosingMethod: JVMEnclosingMethodAttribute,
  Synthetic: JVMSyntheticAttribute,
  Signature: JVMSignatureAttribute,
  SourceFile: JVMSourceFileAttribute,
  SourceDebugExtension: JVMSourceDebugExtensionAttribute,
  LineNumberTable: JVMLineNumberTableAttribute,
  LocalVariableTable: JVMLocalVariableTableAttribute,
  LocalVariableTypeTable: JVMLocalVariableTypeTableAttribute,
  Deprecated: JVMDeprecatedAttribute,
  RuntimeVisibleAnnotations: JVMRuntimeVisibleAnnotationsAttribute,
  RuntimeInvisibleAnnotations: JVMRuntimeInvisibleAnnotationsAttribute,
  RuntimeVisibleParameterAnnotations: JVMRuntimeVisibleParameterAnnotationsAttribute,
  RuntimeInvisibleParameterAnnotations: JVMRuntimeInvisibleParameterAnnotationsAttribute,
  RuntimeVisibleTypeAnnotations: JVMRuntimeVisibleTypeAnnotationsAttribute,
  RuntimeInvisibleTypeAnnotations: JVMRuntimeInvisibleTypeAnnotationsAttribute,
  AnnotationDefault: JVMAnnotationDefaultAttribute,
  BootstrapMethods: JVMBootstrapMethodsAttribute,
  MethodParameters: JVMMethodParametersAttribute
};

function decodeAttribute(attrInfo) {
  var attrInstance = new AttributeMapping[attrInfo.name]();
  return attrInstance.decode(attrInfo);
}